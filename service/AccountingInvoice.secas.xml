<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<secas xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-eca-2.1.xsd">
    <!-- Create sales invoice on Packed -->
    <seca service="update#mantle.shipment.Shipment" when="post-service">
        <condition><expression>statusChanged &amp;&amp; statusId == 'ShipPacked'</expression></condition>
        <actions><service-call name="mantle.account.InvoiceServices.create#SalesShipmentInvoices"
                in-map="context + [statusId:'InvoiceInProcess']"/></actions>
        <!-- NOTE: leave Invoice status In-Process, should be editable after initial create from Shipment, ie don't use InvoiceFinalized -->
        <!-- TODO: make Invoice status on sales shipment configurable, maybe on ProductStore (auto finalize more for ecommerce, etc) -->
    </seca>
    <!-- Create purchase invoice on Delivered -->
    <seca service="update#mantle.shipment.Shipment" when="post-service">
        <condition><expression>statusChanged &amp;&amp; statusId == 'ShipDelivered'</expression></condition>
        <actions><service-call name="mantle.account.InvoiceServices.create#PurchaseShipmentInvoices"
                in-map="context + [statusId:'InvoiceReceived']"/></actions>
    </seca>
    <!-- Un-apply Payments, etc on Cancelled -->
    <seca service="update#mantle.account.invoice.Invoice" when="post-service" run-on-error="false">
        <condition><expression>statusChanged &amp;&amp; statusId == 'InvoiceCancelled'</expression></condition>
        <actions><service-call name="mantle.account.InvoiceServices.cancel#Invoice" in-map="context"/></actions>
    </seca>
    <!-- Un-apply Payments, etc on Unpay -->
    <seca service="update#mantle.account.invoice.Invoice" when="post-service" run-on-error="false">
        <condition><expression>statusChanged &amp;&amp; oldStatusId in ['InvoicePmtRecvd', 'InvoicePmtSent'] &amp;&amp;
            statusId in ['InvoiceFinalized', 'InvoiceApproved']</expression></condition>
        <actions><service-call name="mantle.account.InvoiceServices.unpay#Invoice" in-map="context"/></actions>
    </seca>
</secas>
